%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% Computes durations and signs of the snap for all phases and all components.  %
%                                                                              %
% Inputs                                                                       %
%    X0   : initial position vector     : [1,n]                                %
%    V0   : initial velocitiy vector    : [1,n]                                %
%    A0   : initial acceleration vector : [1,n]                                %
%    XF   : final position vector       : [1,n]                                %
%    VF   : final velocitiy vector      : [1,n]                                %
%    AF   : final acceleration vector   : [1,n]                                %
%    vmax : maximum velocity            : [1,1]                                %
%    amax : maximum acceleration        : [1,1]                                %
%    jmax : maximum jerk                : [1,1]                                %
%    smax : maximum snap                : [1,1]                                %
%    epsi : tolerance on numerical error (stopping condition for numerical     %
%            optimization) : [1,1]                                             %
%                                                                              %
% Outputs                                                                      %
%   tF        : total duration                            : [1,1]              %
%   Durations : duration of all phases for all components : [n,11]             %
%   Signs     : sign of the snap for all components       : [n,4]              %
%                                                                              %
% Author: Alexandre Boeuf: alex.boeuf[at]gmail.com                             %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [tF,Durations,Signs]=durations_and_signs(X0,V0,A0,                ...
                                                  XF,VF,AF,                ...
                                                  vmax,amax,jmax,smax,epsi)
   n=numel(X0);

   vD=zeros(1,3);      
   tF=zeros(1,3);
   Durations=zeros(n,11);
   Signs=zeros(n,4);

   tF_des=0;
   kmax=0;

   for k=1:n
      int_ac=intervals_ac(V0(k),A0(k),amax,jmax,smax);
      int_eh=intervals_eh(VF(k),AF(k),amax,jmax,smax);
      [vD(k),tF(k),Durations(k,:),Signs(k,:)]=v_opt(X0(k),  ...
                                                    V0(k),  ...
                                                    A0(k),  ...
                                                    XF(k),  ...
                                                    VF(k),  ...
                                                    AF(k),  ...
                                                    vmax,   ...
                                                    amax,   ...
                                                    jmax,   ...
                                                    smax,   ...
                                                    int_ac, ...
                                                    int_eh, ...
                                                    epsi);
      if(tF(k)>tF_des)
         tF_des=tF(k);
         kmax=k;
      end
   end

   for k=1:n
      if(k~=kmax)
         int_ac=intervals_ac(V0(k),A0(k),amax,jmax,smax);
         int_eh=intervals_eh(VF(k),AF(k),amax,jmax,smax);
         [vD(k),tF(k),Durations(k,:),Signs(k,:)]=synchronize(tF_des, ...
                                                             tF(k),  ...
                                                             vD(k),  ...
                                                             X0(k),  ...
                                                             V0(k),  ...
                                                             A0(k),  ...
                                                             XF(k),  ...
                                                             VF(k),  ...
                                                             AF(k),  ...
                                                             amax,   ...
                                                             jmax,   ...
                                                             smax,   ...
                                                             int_ac, ...
                                                             int_eh, ...
                                                             epsi);
      end
   end
   
   tF=tF_des;
   
end
