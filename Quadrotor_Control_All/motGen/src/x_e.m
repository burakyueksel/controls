%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% Computes the position at the beginning of phase E.                           %
%                                                                              %
% Inputs                                                                       %
%   aG   : acceleration during phase B    : [1,1]                              %
%   tG   : duration of phase B            : [1,1]                              %
%   xF   : final postion                  : [1,1]                              %
%   vF   : final velocity                 : [1,1]                              %
%   aF   : final acceleration             : [1,1]                              %
%   jmax : maximum jerk                   : [1,1]                              %
%   smax : maximum snap                   : [1,1]                              %
%                                                                              %
% Output                                                                       %
%   xE   : velocity at the end of phase E : [1,1]                              %
%                                                                              %
% Author: Alexandre Boeuf: alex.boeuf[at]gmail.com                             %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function xE=x_e(aG,tG,xF,vF,aF,jmax,smax)
   [tE1,tE2,tH1,tH2,sE,sH]=durations_and_signs_eh(aG,aF,jmax,smax);
   xE=-(7*sE*smax*tE1^4)/12-(7*sE*smax*tE1^3*tE2)/6                          ...
     -(3*sE*smax*tE1^2*tE2^2)/4-2*sH*smax*tE1^2*tH1^2                        ...
     -2*sH*smax*tE1^2*tH1*tH2+2*aF*tE1^2-(sE*smax*tE1*tE2^3)/6               ...
     -2*sH*smax*tE1*tE2*tH1^2-2*sH*smax*tE1*tE2*tH1*tH2+2*aF*tE1*tE2         ...
     -2*sH*smax*tE1*tG*tH1^2-2*sH*smax*tE1*tG*tH1*tH2+2*aF*tE1*tG            ...
     -2*sH*smax*tE1*tH1^3-3*sH*smax*tE1*tH1^2*tH2-sH*smax*tE1*tH1*tH2^2      ...
     +4*aF*tE1*tH1+2*aF*tE1*tH2-2*vF*tE1-(sH*smax*tE2^2*tH1^2)/2             ...
     -(sH*smax*tE2^2*tH1*tH2)/2+(aF*tE2^2)/2-sH*smax*tE2*tG*tH1^2            ...
     -sH*smax*tE2*tG*tH1*tH2+aF*tE2*tG-sH*smax*tE2*tH1^3                     ...
     -(3*sH*smax*tE2*tH1^2*tH2)/2-(sH*smax*tE2*tH1*tH2^2)/2+2*aF*tE2*tH1     ...
     +aF*tE2*tH2-vF*tE2-(sH*smax*tG^2*tH1^2)/2-(sH*smax*tG^2*tH1*tH2)/2      ...
     +(aF*tG^2)/2-sH*smax*tG*tH1^3-(3*sH*smax*tG*tH1^2*tH2)/2                ...
     -(sH*smax*tG*tH1*tH2^2)/2+2*aF*tG*tH1+aF*tG*tH2-vF*tG                   ...
     -(7*sH*smax*tH1^4)/12-(7*sH*smax*tH1^3*tH2)/6                           ...
     -(3*sH*smax*tH1^2*tH2^2)/4+2*aF*tH1^2-(sH*smax*tH1*tH2^3)/6             ...
     +2*aF*tH1*tH2-2*vF*tH1+(aF*tH2^2)/2-vF*tH2+xF;
return
